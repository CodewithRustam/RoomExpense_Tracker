@model RoomExpenseTracker.ViewModels.RoomExpensesViewModel

@{
    bool isTwoMembers = false;
}

<div class="px-4 sm:px-0 mb-6">
    <div class="flex justify-start sm:justify-end items-center gap-3 text-base font-semibold flex-nowrap">
        <span class="text-indigo-600 bg-indigo-50 px-3 py-2 rounded-full shadow-sm whitespace-nowrap">
            ₹@(Model.AvgPerPerson?.ToString("F2") ?? "0.00") / person
        </span>
        <span class="text-gray-500">•</span>
        <span class="text-red-500 bg-red-50 px-3 py-2 rounded-full shadow-sm whitespace-nowrap">
            ₹@(Model.TotalExpense?.ToString("F2") ?? "0.00") total
        </span>
    </div>
</div>

<div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-8">
    @foreach (var person in Model.Summary)
    {
        var amountClass = person.IsOwed ? "text-green-600 bg-green-50"
        : person.IsOwing ? "text-red-600 bg-red-50"
        : "text-blue-600 bg-blue-50";

        <div class="bg-white/30 backdrop-blur-lg p-4 rounded-xl border border-white/20 shadow-lg">
            <div class="absolute -top-10 -right-10 w-32 h-32 bg-gradient-to-br from-indigo-200 to-purple-300 opacity-10 rotate-45 pointer-events-none"></div>
            <div class="flex gap-4 items-start mb-4">
                <!-- Left Column (40%) -->
                <div class="w-[40%]">
                    <div class="p-4 rounded-xl shadow-md bg-gradient-to-br from-indigo-100 via-purple-100 to-pink-100 group hover:shadow-lg transition">
                        <!-- Header with Member Name + Pills -->
                        <h3 class="font-bold text-gray-800">@person.MemberName</h3>

                        <!-- Total Expense -->
                        <p class="mt-1 font-bold text-gray-900 text-lg">
                            ₹@person.TotalExpense?.ToString("F2")
                        </p>                                        
                    </div>
                </div>

                <!-- Right Column (60%) -->
                <div class="w-[60%] flex flex-col items-end text-right pe-2">
                    <!-- Pills -->
                    @if (isTwoMembers)
                    {
                        <div class="relative w-40 bg-gray-200 rounded-full flex p-1 pill-switch">
                            <button class="tab-btn flex-1 text-sm py-2 rounded-full font-semibold relative z-10 text-white active">
                                Split
                            </button>
                            <button class="tab-btn flex-1 text-sm py-2 rounded-full font-semibold relative z-10 text-gray-500">
                                Non-Split
                            </button>

                            <div class="indicator absolute top-1 left-1 w-[calc(50%-4.5px)] h-[calc(100%-8px)]
                                            bg-gradient-to-r from-indigo-500 via-purple-500 to-pink-500
                                            rounded-full shadow-md transition-all duration-300 z-0">
                            </div>
                        </div>
                    }

                    <!-- Badge -->
                    <div class="mt-2">
                        <span style="padding: 8px 10px 8px 10px;"
                              class="@amountClass inline-block text-sm font-semibold rounded-full shadow">
                            @person.BadgeText
                            @if (person.BadgeAmount != 0)
                            {
                                <span>: ₹@person.BadgeAmount.ToString("F2")</span>
                            }
                        </span>
                    </div>

                    <!-- Paid -->
                    @if (person.PaidAmount > 0)
                    {
                        <div class="mt-2">
                            <p class="font-semibold text-sm text-red-800 bg-red-100 px-3 py-2 rounded-full shadow-sm">
                                Paid: ₹@person.PaidAmount?.ToString("F2")
                            </p>
                        </div>
                    }

                    <!-- Received -->
                    @if (person.ReceivedAmount > 0)
                    {
                        <div class="mt-2">
                            <p class="font-semibold text-sm text-green-600 bg-green-100 px-3 py-2 rounded-full shadow-sm">
                                Received: ₹@person.ReceivedAmount?.ToString("F2")
                            </p>
                        </div>
                    }

                    <!-- Settle Up Button -->
                    @if (person.IsOwing && User.Identity?.IsAuthenticated == true && User.Identity.Name == person.MemberName)
                    {
                        <div class="mt-3">
                            <button class="settle-btn flex items-center gap-2 px-3 py-2 rounded-full text-white text-sm font-bold
                        bg-gradient-to-r from-teal-500 to-green-500 hover:from-teal-600 hover:to-green-600
                        shadow-md hover:shadow-lg transition transform hover:scale-105"
                                    data-member-name="@person.MemberName"
                                    data-amount="@person.BadgeAmount"
                                    data-room-id="@Model.Expense?.RoomId"
                                    data-avg-per-person="@Model.AvgPerPerson">

                                <!-- Icon -->
                                <span class="flex items-center justify-center w-6 h-6 rounded-full bg-white/20">
                                    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                              d="M12 8c-1.657 0-3 .895-3 2s1.343 2
                                          3 2 3 .895 3 2-1.343 2-3 2
                                          m0-8c1.11 0 2.08.402 2.599 1
                                          M12 8V7m0 1v8m0 0v1m0-1
                                          c-1.11 0-2.08-.402-2.599-1
                                          M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                                    </svg>
                                </span>
                                <span>Settle Up</span>
                            </button>
                        </div>
                    }
                </div>
            </div>




            @if (person.Items == null || person.Items.Count == 0)
            {
                <div class="py-10 text-center text-white-500">
                    No expenses added yet.
                </div>
            }
            else
            {
                <div class="max-h-48 overflow-y-auto scrollbar-thin scrollbar-thumb-indigo-300 scrollbar-track-gray-100 ">
                    <table class="w-full text-sm">
                        <thead class="text-center">
                            <tr class="text-left text-white-500 border-b">
                                <th class="py-2 pr-2 text-left" style="width: 50%;">Item</th>
                                <th class="py-2 pr-2 text-left" style="width: 20%;">Amount</th>
                                <th class="py-2 text-left" style="width: 20%;">Date</th>
                                @if (User.Identity?.IsAuthenticated == true && User.Identity.Name == person.MemberName && (person.IsOwed || person.IsOwing))
                                {
                                    <th class="py-2 text-right" style="width: 10%;">Action</th>
                                }
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var expense in person.Items)
                            {
                                <tr>
                                    <td class="py-2 pr-2 text-white-700" style="width: 50%;">@expense.Item</td>
                                    <td class="py-2 pr-2 text-white-700" style="width: 20%;">₹@expense.Amount.ToString("F2")</td>
                                    <td class="py-2 text-white-500 whitespace-nowrap" style="width: 20%;">@expense.Date.ToString("MMM dd")</td>
                                    @if (User.Identity?.IsAuthenticated == true && User.Identity.Name == person.MemberName && (person.IsOwed || person.IsOwing))
                                    {
                                        <td class="text-right" style="width: 10%;">
                                            <button class="edit-expense-btn flex items-center gap-1 px-2 py-1.5 rounded-full bg-indigo-50 text-indigo-600 hover:bg-indigo-100 text-sm font-medium transition"
                                                    data-expense-id="@expense.ExpenseId"
                                                    data-item="@expense.Item"
                                                    data-amount="@expense.Amount"
                                                    data-date="@expense.Date.ToString("yyyy-MM-dd")"
                                                    data-room-id="@expense.RoomId">
                                                <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                                          d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5
                                     m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z" />
                                                </svg>
                                                
                                            </button>
                                        </td>

                                    }
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
        </div>
    }
</div>
<!-- Edit Expense Modal -->
<div id="editExpenseModal" tabindex="-1" aria-hidden="true" class="fixed hidden inset-0 z-50 bg-black bg-opacity-50 flex items-center justify-center" style="margin-top: 0rem;">
    <div class="relative w-full max-w-md p-4">
        <div class="bg-white/10 backdrop-blur-lg p-6 rounded-xl border border-white/20 shadow-lg">
            <div class="flex justify-between items-center p-4 border-b">
                <h3 class="text-lg font-semibold text-white-900">Edit Expense</h3>
                <button type="button" data-modal-hide="editExpenseModal"
                        class="w-8 h-8 text-white-500 transition rounded-full flex items-center justify-center">
                    ✕
                </button>
            </div>
            <div class="pe-4 ps-4 pb-6">
                @await Html.PartialAsync("~/Views/Expenses/_EditExpenseModal.cshtml", new RoomExpenseTracker.Models.ExpenseViewModel())
            </div>
        </div>
    </div>
</div>

<!-- Settle Up Modal -->
<div id="settleModal" tabindex="-1" aria-hidden="true"
     class="fixed hidden inset-0 z-50 bg-black bg-opacity-50 flex items-center justify-center"
     style="margin-top: 0rem;">
    <div class="relative w-full max-w-md p-4">
        <div class="bg-white/10 backdrop-blur-lg p-5 rounded-xl border border-white/20 shadow-lg">
            <div class="flex justify-between items-center p-2 border-b">
                <h3 class="text-lg font-semibold text-white-900">Settle Up</h3>
                <button type="button" data-modal-hide="settleModal"
                        class="w-8 h-8 text-white-500 transition rounded-full flex items-center justify-center">
                    ✕
                </button>
            </div>
            <div class="p-5">
                <form id="settleForm" method="post" asp-action="Settle" asp-controller="Expenses">
                    <input type="hidden" id="settleRoomId" name="RoomId" />
                    <input type="hidden" id="settleMemberName" name="MemberName" />
                    <input type="hidden" id="settleAmount" name="Amount" />
                    <input type="hidden" id="settleMonth" name="Month" />
                    <label for="paidToMemberName" class="block text-sm font-medium text-white-700 mb-2">Pay to</label>
                    <select id="paidToMemberName" style="background:#26272d"
                            name="PaidToMemberName"
                            class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors">
                        <option value="" disabled selected>Select a person to settle with</option>
                        @foreach (var person in Model.Summary.Where(p => p.IsOwed))
                        {
                            <option value="@person.MemberName"
                                    data-owed-amount="@person.BadgeAmount.ToString("F2")">
                                @person.MemberName (Owed: ₹@person.BadgeAmount.ToString("F2"))
                            </option>
                        }
                    </select>
                    <p class="text-white-700 mb-4 mt-4">
                        Confirm settlement of
                        <span id="settleAmountDisplay" class="font-semibold"></span>
                        for <span id="settleMemberDisplay" class="font-semibold"></span>
                        to <span id="paidToMemberDisplay" class="font-semibold"></span>.
                    </p>
                    <div class="flex justify-end gap-3">
                        <button type="button" data-modal-hide="settleModal" class="px-4 py-2 text-gray-600 bg-gray-100 rounded-md hover:bg-gray-200">Cancel</button>
                        <button type="submit" id="confirmSettleBtn" class="px-4 py-2 text-white bg-indigo-600 rounded-md hover:bg-indigo-700" disabled>Confirm</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>
<script src="~/js/displayexpenses.js"></script>
