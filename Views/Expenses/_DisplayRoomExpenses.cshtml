@model RoomExpenseTracker.ViewModels.RoomExpensesViewModel

<div class="px-4 sm:px-0 mb-6">
    <div class="flex justify-start sm:justify-end items-center gap-3 text-base font-semibold flex-nowrap">
        <span class="text-indigo-600 bg-indigo-50 px-3 py-1 rounded-full shadow-sm whitespace-nowrap">
            ₹@(Model.AvgPerPerson?.ToString("F2") ?? "0.00") / person
        </span>
        <span class="text-gray-500">•</span>
        <span class="text-red-500 bg-red-50 px-3 py-1 rounded-full shadow-sm whitespace-nowrap">
            ₹@(Model.TotalExpense?.ToString("F2") ?? "0.00") total
        </span>
    </div>
</div>

<div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-8">
    @foreach (var person in Model.Summary)
    {
        var amountClass = person.IsOwed ? "text-green-600 bg-green-50"
        : person.IsOwing ? "text-red-600 bg-red-50"
        : "text-blue-600 bg-blue-50";
        <div class="bg-white/10 backdrop-blur-lg p-6 rounded-xl border border-white/20 shadow-lg">
            <div class="absolute -top-10 -right-10 w-32 h-32 bg-gradient-to-br from-indigo-200 to-purple-300 opacity-10 rotate-45 pointer-events-none"></div>
            <div class="flex justify-between items-center mb-4">
                <h3 class="text-xl font-bold text-white-800">@person.MemberName</h3>
                <div class="flex items-center gap-2">
                    <span class="@amountClass px-3 py-1 rounded-full text-sm font-medium shadow">
                        @person.BadgeText
                        @if (person.BadgeAmount != 0)
                        {
                            <span>: ₹@person.BadgeAmount.ToString("F2")</span>
                        }
                    </span>
                    @if (person.IsOwing && User.Identity?.IsAuthenticated == true && User.Identity.Name == person.MemberName)
                    {
                        <button class="settle-btn text-indigo-600 hover:text-indigo-800"
                                data-member-name="@person.MemberName"
                                data-amount="@person.BadgeAmount"
                                data-room-id="@Model.Expense?.RoomId"
                                data-avg-per-person="@Model.AvgPerPerson">
                            <!-- svg icon unchanged -->
                            <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                      d="M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                            </svg>
                        </button>
                    }
                </div>
            </div>
            <div class="flex justify-between items-center flex-wrap">
                <div class="relative group">
                    <p class="text-sm text-white-600 font-medium mb-1">Total Expenses</p>
                    <p class="font-semibold text-gray-900 px-2 py-1 rounded-md shadow-sm" style="background:rgb(239 224 250)">
                        ₹@person.TotalExpense?.ToString("F2")<span class="sr-only"> Total Expenses</span>
                    </p>
                </div>
                @if (person.PaidAmount > 0)
                {
                    <div class="relative group">
                        <p class="text-sm text-white-600 font-medium mb-1">Paid</p>
                        <p class="font-semibold text-red-600 bg-red-50 px-2 py-1 rounded-md shadow-sm transition-all duration-200 group-hover:bg-red-100 group-hover:shadow-md">
                            ₹@person.PaidAmount?.ToString("F2")<span class="sr-only"> Paid</span>
                        </p>
                    </div>
                }
                @if (person.ReceivedAmount > 0)
                {
                    <div class="relative group">
                        <p class="text-sm text-gray-600 font-medium mb-1">Received</p>
                        <p class="font-semibold text-green-600 bg-green-50 px-2 py-1 rounded-md shadow-sm transition-all duration-200 group-hover:bg-green-100 group-hover:shadow-md">
                            ₹@person.ReceivedAmount?.ToString("F2")<span class="sr-only"> Received</span>
                        </p>
                    </div>
                }
            </div>
            @if (person.Items == null || person.Items.Count == 0)
            {
                <div class="py-10 text-center text-white-500">
                    No expenses added yet.
                </div>
            }
            else
            {
                <div class="max-h-48 overflow-y-auto scrollbar-thin scrollbar-thumb-indigo-300 scrollbar-track-gray-100 ">
                    <table class="w-full text-sm mt-3">
                        <thead class="text-center">
                            <tr class="text-left text-white-500 border-b">
                                <th class="py-2 pr-2 text-left" style="width: 50%;">Item</th>
                                <th class="py-2 pr-2 text-left" style="width: 20%;">Amount</th>
                                <th class="py-2 text-left" style="width: 20%;">Date</th>
                                @if (User.Identity?.IsAuthenticated == true && User.Identity.Name == person.MemberName)
                                {
                                    <th class="py-2 text-right" style="width: 10%;">Action</th>
                                }
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var expense in person.Items)
                            {
                                <tr>
                                    <td class="py-2 pr-2 text-white-700" style="width: 50%;">@expense.Item</td>
                                    <td class="py-2 pr-2 text-white-700" style="width: 20%;">₹@expense.Amount.ToString("F2")</td>
                                    <td class="py-2 text-white-500 whitespace-nowrap" style="width: 20%;">@expense.Date.ToString("MMM dd")</td>
                                    @if (User.Identity?.IsAuthenticated == true && User.Identity.Name == person.MemberName)
                                    {
                                        <td class="py-2 text-right" style="width: 10%;">
                                            <button class="edit-expense-btn text-indigo-600 hover:text-indigo-800"
                                                    data-expense-id="@expense.ExpenseId"
                                                    data-item="@expense.Item"
                                                    data-amount="@expense.Amount"
                                                    data-date="@expense.Date.ToString("yyyy-MM-dd")"
                                                    data-room-id="@expense.RoomId">
                                                <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24"
                                                     xmlns="http://www.w3.org/2000/svg">
                                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                                          d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0
                                                                                                                                  112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"></path>
                                                </svg>
                                            </button>
                                        </td>
                                    }
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
        </div>
    }
</div>

<script>
    $(function () {
        // Edit Expense Modal Logic
        const $form = $('#editExpenseForm');
        const $saveBtn = $form.find('button[type="submit"]');
        let original = {};

        // Open 'Edit Expense' modal & populate values
        $('.edit-expense-btn').on('click', function () {
            $('#editExpenseModal').removeClass('hidden');
            $('body').addClass('overflow-hidden');

            const $btn = $(this);
            $('#expenseId').val($btn.data('expense-id'));
            $('#item').val($btn.data('item'));
            $('#amount').val($btn.data('amount'));
            $('#date').val($btn.data('date'));
            $('#roomId').val($btn.data('room-id'));

            original = {
                item: $btn.data('item'),
                amount: parseFloat($btn.data('amount')),
                date: $btn.data('date')
            };

            $saveBtn.prop('disabled', true);
        });

        // Enable 'Save' only if fields changed
        $('#item, #amount, #date').on('input change', function () {
            const changed =
                $('#item').val() !== original.item ||
                parseFloat($('#amount').val()) !== original.amount ||
                $('#date').val() !== original.date;

            $saveBtn.prop('disabled', !changed);
        });

        $('[data-modal-hide="editExpenseModal"]').on('click', function () {
            $('#editExpenseModal').addClass('hidden');
            $('body').removeClass('overflow-hidden');
        });

        // Settle Up Modal Logic
        $('.settle-btn').on('click', function () {
            $('#settleModal').removeClass('hidden');
            $('body').addClass('overflow-hidden');
            const $btn = $(this);

            $('#settleRoomId').val($btn.data('room-id'));
            $('#settleMemberName').val($btn.data('member-name'));
            $('#settleMemberDisplay').text($btn.data('member-name'));
            $('#settleMonth').val($('#monthSelect').val());
            $('#settleAmount').val('');
            $('#settleAmountDisplay').text('');
            $('#paidToMemberName').val('');
            $('#paidToMemberDisplay').text('');
            $('#confirmSettleBtn').prop('disabled', true);
        });

        $('#paidToMemberName').on('change', function () {
            const $selected = $(this).find('option:selected');
            const settlementMember = $selected.val();
            const owedAmount = parseFloat($selected.data('owed-amount') || 0);

            if (settlementMember) {
                const settlementAmount = Math.abs(owedAmount).toFixed(2);
                $('#settleAmount').val(settlementAmount);
                $('#settleAmountDisplay').text('₹' + settlementAmount);
                $('#paidToMemberDisplay').text(settlementMember);
                $('#confirmSettleBtn').prop('disabled', false);
            } else {
                $('#settleAmount').val('');
                $('#settleAmountDisplay').text('');
                $('#paidToMemberDisplay').text('');
                $('#confirmSettleBtn').prop('disabled', true);
            }
        });

        $('[data-modal-hide="settleModal"]').on('click', function () {
            $('#settleModal').addClass('hidden');
            $('body').removeClass('overflow-hidden');
        });
    });
</script>
